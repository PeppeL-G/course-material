import { _ as _export_sfc, o as openBlock, c as createElementBlock, f as createStaticVNode } from "./app-8331cbf7.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="repetition-exercises" tabindex="-1"><a class="header-anchor" href="#repetition-exercises" aria-hidden="true">#</a> Repetition Exercises</h1><p>On this page you find the repetition exercises Eveline has in the course.</p><h2 id="_2022-11-01" tabindex="-1"><a class="header-anchor" href="#_2022-11-01" aria-hidden="true">#</a> 2022-11-01</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### PRINT PERSONAL INFORMATION ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program prints your name, age and email.\\n&quot;</span><span class="token punctuation">)</span>\n\nname <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter your name: &quot;</span><span class="token punctuation">)</span>\nage <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter you age: &quot;</span><span class="token punctuation">)</span>\nemail <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter your email: &quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Your name is &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Your age is &quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Your email is &quot;</span> <span class="token operator">+</span> email<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### AREA OF A RECTANGLE ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program computes the area of a rectangle.&quot;</span><span class="token punctuation">)</span>\n\nlength <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the length: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nwidth <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the width: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\narea <span class="token operator">=</span> length <span class="token operator">*</span> width\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The area is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; cm squared.&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### USD TO SEK ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program converts USD to SEK.\\n&quot;</span><span class="token punctuation">)</span>\n\nusd_to_convert <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the number of USD that you want to convert to SEK: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nexchange_rate <span class="token operator">=</span> <span class="token number">10</span>\n\namount_of_sek <span class="token operator">=</span> usd_to_convert <span class="token operator">*</span> exchange_rate\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>usd_to_convert<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; USD is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>amount_of_sek<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; SEK.&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### PRINT NUMBERS FROM 0 TO 5 ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program prints the numbers from 0 to 5.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CALCULATE 1, 2, 3, 4, 5 SQUARED ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates 1, 2, 3, 4, 5 squared.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    result <span class="token operator">=</span> i<span class="token operator">*</span>i\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; squared is equal to &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### AREA OF MANY RECTANGLES ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates the area of many rectangles.\\n&quot;</span><span class="token punctuation">)</span>\n\nnumber_of_areas <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the number of areas that you want to compute: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>number_of_areas<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    length <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the length of a rectangle: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    width <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Enter the width of the rectangle: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    area <span class="token operator">=</span> length <span class="token operator">*</span> width\n\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The area of the rectangle is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; cm squared.&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2022-11-08" tabindex="-1"><a class="header-anchor" href="#_2022-11-08" aria-hidden="true">#</a> 2022-11-08</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CALCULATE AVERAGE OF TWO RANDOM NUMBERS ###</span>\n\n<span class="token keyword">import</span> random\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates the average of two random numbers.\\n&quot;</span><span class="token punctuation">)</span>\n\nnumber_1 <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\nnumber_2 <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n\naverage <span class="token operator">=</span> <span class="token punctuation">(</span>number_1 <span class="token operator">+</span> number_2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The average of &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>number_1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; and &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>number_2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>average<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CALCULATE THE AVERAGE OF THE NUMBERS IN A LIST ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates the average of the numbers in a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>\n<span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>\n    <span class="token builtin">sum</span> <span class="token operator">+=</span> number\n\naverage <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The average of &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>average<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CALCULATE THE PRODUCT OF NUMBERS IN A LIST USING A FUNCTION ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates the product \\nof numbers using a function.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">product_of_numbers</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    product <span class="token operator">=</span> <span class="token number">1</span>\n    <span class="token keyword">for</span> number <span class="token keyword">in</span> numbers<span class="token punctuation">:</span>\n        product <span class="token operator">*=</span> number\n    <span class="token keyword">return</span> product\n\nresult <span class="token operator">=</span> product_of_numbers<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CALCULATE THE AREA OF A RECTANGLE USING A FUNCTION ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program calculates the area \\nof a rectangle using a function.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">area_of_rectangle</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    area <span class="token operator">=</span> width <span class="token operator">*</span> length\n    <span class="token keyword">return</span> area\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>area_of_rectangle<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2022-11-15" tabindex="-1"><a class="header-anchor" href="#_2022-11-15" aria-hidden="true">#</a> 2022-11-15</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CHECKING IF TWO NUMBERS ARE THE SAME ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program checks if two numbers are \\nthe same and returns true or false.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">same_numbers</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token keyword">if</span> num1 <span class="token operator">==</span> num2<span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token boolean">True</span>\n  <span class="token keyword">else</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token boolean">False</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>same_numbers<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CHECKING IF A NUMBER IS NEGATIVE ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program checks if a number is\\nnegative and prints true or false.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">is_negative</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token keyword">if</span> number <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token boolean">True</span>\n  <span class="token keyword">return</span> <span class="token boolean">False</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>is_negative<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### COUNTING EVEN NUMBERS ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program counts even numbers in a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">even_numbers</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  result <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">for</span> number <span class="token keyword">in</span> numbers<span class="token punctuation">:</span>\n    <span class="token keyword">if</span> number <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>\n      result <span class="token operator">+=</span> <span class="token number">1</span>\n  <span class="token keyword">return</span> result\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>even_numbers<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### RETURNING THE SMALLEST NUMBER IN A LIST ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program returns the \\nsmallest number in a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">smallest_number</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  smallest_number <span class="token operator">=</span> numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n  <span class="token keyword">for</span> number <span class="token keyword">in</span> numbers<span class="token punctuation">:</span>\n    <span class="token keyword">if</span> number <span class="token operator">&lt;</span> smallest_number<span class="token punctuation">:</span>\n      smallest_number <span class="token operator">=</span> number\n  <span class="token keyword">return</span> smallest_number\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>smallest_number<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### WHILE LOOP WITH RANDOM NUMBERS ###</span>\n\n<span class="token keyword">import</span> random\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program prints random \\nnumbers until the user enters stop.\\n&quot;</span><span class="token punctuation">)</span>\n\nentered_text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>\n\n<span class="token keyword">while</span> entered_text <span class="token operator">!=</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">:</span>\n  entered_text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Type continue or stop to exit the program: &quot;</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> entered_text <span class="token operator">==</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">:</span>\n    <span class="token keyword">break</span> <span class="token comment"># Takes us out of the loop</span>\n  <span class="token keyword">elif</span> entered_text <span class="token operator">==</span> <span class="token string">&quot;continue&quot;</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">else</span><span class="token punctuation">:</span>\n    <span class="token keyword">continue</span> <span class="token comment"># Takes us back to the beginning of the loop</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The program has ended.&quot;</span><span class="token punctuation">)</span>\n\n\n\n<span class="token comment">### Alternative solution ###</span>\n\n<span class="token keyword">import</span> random\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program prints random \\nnumbers until the user enters stop.\\n&quot;</span><span class="token punctuation">)</span>\n\nentered_text <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>\n\n<span class="token keyword">while</span> entered_text <span class="token operator">!=</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">:</span>\n  entered_text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Type continue or stop to exit the program: &quot;</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> entered_text <span class="token operator">!=</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The program has ended.&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2022-11-23" tabindex="-1"><a class="header-anchor" href="#_2022-11-23" aria-hidden="true">#</a> 2022-11-23</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### ADDING THE NUMBERS 1-5 TO A LIST ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program adds the numbers \\n1, 2, 3, 4, 5 to a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### REMOVING ALL STRINGS IN A LIST ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program removes all strings consisting of letters in a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;five&quot;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&quot;eight&quot;</span><span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>\n  <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">str</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">list</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### CREATING A LIST WITH REVERSED ORDER OF VALUES ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program creates a list with \\nthe reversed values of another list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\nreversed_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 5, 4, 3, 2, 1</span>\n\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  last_value <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n  reversed_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>last_value<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>reversed_list<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### ADDING VALUES FROM A DICT TO A LIST ###</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program adds values from a dict to a list.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;four&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span>\n<span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>\n  <span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2022-11-29" tabindex="-1"><a class="header-anchor" href="#_2022-11-29" aria-hidden="true">#</a> 2022-11-29</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### STORING DATA IN A JSON, CSV AND XML FILE ###</span>\n\n<span class="token keyword">import</span> json\n<span class="token keyword">import</span> csv\n<span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program stores data in JSON, CSV and XML files.\\n&quot;</span><span class="token punctuation">)</span>\n\ngames <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Zelda&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;5/5&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Super Mario&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;4/5&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Need for Speed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;4/5&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Rayman&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3/5&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">def</span> <span class="token function">write_to_json_file</span><span class="token punctuation">(</span>games<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    json_code <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>games<span class="token punctuation">)</span>\n\n    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> json_file<span class="token punctuation">:</span>\n        json_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json_code<span class="token punctuation">)</span>\n\n<span class="token comment"># write_to_json_file(games)</span>\n\n\n<span class="token keyword">def</span> <span class="token function">write_to_csv_file</span><span class="token punctuation">(</span>games<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.csv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>\n        writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> quotechar<span class="token operator">=</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>\n\n        <span class="token keyword">for</span> game <span class="token keyword">in</span> games<span class="token punctuation">:</span>\n            writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span>game<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> game<span class="token punctuation">[</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token comment"># write_to_csv_file(games)</span>\n\n\n<span class="token keyword">def</span> <span class="token function">write_to_xml_file</span><span class="token punctuation">(</span>games<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    games_element <span class="token operator">=</span> ET<span class="token punctuation">.</span>Element<span class="token punctuation">(</span><span class="token string">&quot;games&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> game <span class="token keyword">in</span> games<span class="token punctuation">:</span>\n        game_element <span class="token operator">=</span> ET<span class="token punctuation">.</span>SubElement<span class="token punctuation">(</span>games_element<span class="token punctuation">,</span> <span class="token string">&quot;game&quot;</span><span class="token punctuation">)</span>\n\n        name_element <span class="token operator">=</span> ET<span class="token punctuation">.</span>SubElement<span class="token punctuation">(</span>game_element<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>\n        name_element<span class="token punctuation">.</span>text <span class="token operator">=</span> game<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>\n\n        rating_element <span class="token operator">=</span> ET<span class="token punctuation">.</span>SubElement<span class="token punctuation">(</span>game_element<span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">)</span>\n        rating_element<span class="token punctuation">.</span>text <span class="token operator">=</span> game<span class="token punctuation">[</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">]</span>\n\n    xml_code <span class="token operator">=</span> ET<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>games_element<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;unicode&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> xml_file<span class="token punctuation">:</span>\n        xml_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>xml_code<span class="token punctuation">)</span>\n\n<span class="token comment"># write_to_xml_file(games)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">### READING DATA FROM A JSON, CSV AND XML FILE ###</span>\n\n<span class="token keyword">import</span> json\n<span class="token keyword">import</span> csv\n<span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;This program reads data from JSON, CSV and XML files.\\n&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">read_from_json_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> json_file<span class="token punctuation">:</span>\n    <span class="token keyword">return</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment"># print(read_from_json_file())</span>\n\n\n<span class="token keyword">def</span> <span class="token function">read_from_csv_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  games <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.csv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>\n    reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> quotechar<span class="token operator">=</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>\n      games<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> games\n\n<span class="token comment"># print(read_from_csv_file())</span>\n\n\n<span class="token keyword">def</span> <span class="token function">read_from_xml_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  games <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n\n  <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;games.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> xml_file<span class="token punctuation">:</span>\n    xml_code <span class="token operator">=</span> xml_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    games_element <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>xml_code<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> game_element <span class="token keyword">in</span> games_element<span class="token punctuation">:</span>\n      games<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> game_element<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span>\n        <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> game_element<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> games\n\n<span class="token comment"># print(read_from_xml_file())</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 28);
const _hoisted_29 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_29);
}
const repetitionExercises_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "repetition-exercises.html.vue"]]);
export {
  repetitionExercises_html as default
};
